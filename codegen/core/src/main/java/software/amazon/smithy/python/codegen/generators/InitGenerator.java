/*
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0
 */
package software.amazon.smithy.python.codegen.generators;

import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.stream.Collectors;
import software.amazon.smithy.python.codegen.GenerationContext;
import software.amazon.smithy.utils.SmithyInternalApi;

/**
 * Creates __init__.py files where not already present.
 */
@SmithyInternalApi
public final class InitGenerator implements Runnable {

    private final GenerationContext context;

    public InitGenerator(GenerationContext context) {
        this.context = context;
    }

    @Override
    public void run() {
        var directories = context
                .writerDelegator()
                .getWriters()
                .keySet()
                .stream()
                .map(Paths::get)
                .filter(path -> !path.getParent().equals(context.fileManifest().getBaseDir()))
                .collect(Collectors.groupingBy(Path::getParent, Collectors.toSet()));
        for (var entry : directories.entrySet()) {
            var initPath = entry.getKey().resolve("__init__.py");
            if (!entry.getValue().contains(initPath)) {
                context.fileManifest()
                        .writeFile(initPath,
                                "# Code generated by smithy-python-codegen DO NOT EDIT.\n");
            }
        }
        context.writerDelegator()
                .useFileWriter(
                        "src/%s/__init__.py".formatted(context.settings().moduleName()),
                        w -> w.write("__version__: str = $S", context.settings().moduleVersion()));
    }
}
